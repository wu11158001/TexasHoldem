// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TexasHoldemProtobuf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TexasHoldemProtobuf {

  /// <summary>Holder for reflection information generated from TexasHoldemProtobuf.proto</summary>
  public static partial class TexasHoldemProtobufReflection {

    #region Descriptor
    /// <summary>File descriptor for TexasHoldemProtobuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TexasHoldemProtobufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlUZXhhc0hvbGRlbVByb3RvYnVmLnByb3RvEhNUZXhhc0hvbGRlbVByb3Rv",
            "YnVmIrQFCghNYWluUGFjaxI1CgtyZXF1ZXN0Q29kZRgBIAEoDjIgLlRleGFz",
            "SG9sZGVtUHJvdG9idWYuUmVxdWVzdENvZGUSMwoKYWN0aW9uQ29kZRgCIAEo",
            "DjIfLlRleGFzSG9sZGVtUHJvdG9idWYuQWN0aW9uQ29kZRIzCgpyZXR1cm5D",
            "b2RlGAMgASgOMh8uVGV4YXNIb2xkZW1Qcm90b2J1Zi5SZXR1cm5Db2RlEjcK",
            "DHNlbmRNb2RlQ29kZRgEIAEoDjIhLlRleGFzSG9sZGVtUHJvdG9idWYuU2Vu",
            "ZE1vZGVDb2RlEkMKElJldmlzZVVzZXJJbmZvUGFjaxgFIAEoCzInLlRleGFz",
            "SG9sZGVtUHJvdG9idWYuUmV2aXNlVXNlckluZm9QYWNrEjEKCWxvZ2luUGFj",
            "axgGIAEoCzIeLlRleGFzSG9sZGVtUHJvdG9idWYuTG9naW5QYWNrEi8KCHJv",
            "b21QYWNrGAcgAygLMh0uVGV4YXNIb2xkZW1Qcm90b2J1Zi5Sb29tUGFjaxI3",
            "Cgx1c2VySW5mb1BhY2sYCCADKAsyIS5UZXhhc0hvbGRlbVByb3RvYnVmLlVz",
            "ZXJJbmZvUGFjaxI3Cgxjb21wdXRlclBhY2sYCSABKAsyIS5UZXhhc0hvbGRl",
            "bVByb3RvYnVmLkNvbXB1dGVyUGFjaxI9Cg9nYW1lUHJvY2Vzc1BhY2sYCiAB",
            "KAsyJC5UZXhhc0hvbGRlbVByb3RvYnVmLkdhbWVQcm9jZXNzUGFjaxI7Cg5n",
            "YW1lQWN0aW9uUGFjaxgLIAEoCzIjLlRleGFzSG9sZGVtUHJvdG9idWYuR2Ft",
            "ZUFjdGlvblBhY2sSNwoMYWN0aW9uZXJQYWNrGAwgASgLMiEuVGV4YXNIb2xk",
            "ZW1Qcm90b2J1Zi5BY3Rpb25lclBhY2siPgoJTG9naW5QYWNrEg8KB2FjY291",
            "bnQYASABKAkSEAoIcGFzc3dvcmQYAiABKAkSDgoGYXZhdGFyGAMgASgJIl8K",
            "DFVzZXJJbmZvUGFjaxIQCghHYW1lU2VhdBgBIAEoBRIQCghuaWNrTmFtZRgC",
            "IAEoCRIOCgZhdmF0YXIYAyABKAkSDAoEY2FzaBgEIAEoCRINCgVjaGlwcxgF",
            "IAEoCSI9ChJSZXZpc2VVc2VySW5mb1BhY2sSEgoKcmV2aXNlTmFtZRgBIAEo",
            "CRITCgtyZXZpc2VWYWx1ZRgCIAEoCSJXCghSb29tUGFjaxIQCghyb29tTmFt",
            "ZRgBIAEoCRIUCgxSb29tQmlnQmxpbmQYAiABKAkSEAoIbWF4Q291bnQYAyAB",
            "KAUSEQoJQ3VyckNvdW50GAQgASgFIogBCgxDb21wdXRlclBhY2sSEAoIbmlj",
            "a05hbWUYASABKAkSDgoGYXZhdGFyGAIgASgJEhAKCGJldENoaXBzGAMgASgJ",
            "Eg0KBWNoaXBzGAQgASgJEjUKCWdhbWVTdGF0ZRgFIAEoDjIiLlRleGFzSG9s",
            "ZGVtUHJvdG9idWYuVXNlckdhbWVTdGF0ZSKfBwoPR2FtZVByb2Nlc3NQYWNr",
            "EjUKC2dhbWVQcm9jZXNzGAEgASgOMiAuVGV4YXNIb2xkZW1Qcm90b2J1Zi5H",
            "YW1lUHJvY2VzcxISCgphY3Rpb25Vc2VyGAIgASgJEhQKDHNtYWxsQmxpbmRl",
            "chgDIAEoCRISCgpiaWdCbGluZGVyGAQgASgJEhUKDWJpZ0JsaW5kVmFsdWUY",
            "BSABKAkSFQoNdG90YWxCZXRDaGlwcxgGIAEoCRIOCgZyZXN1bHQYByADKAUS",
            "RgoJaGFuZFBva2VyGAggAygLMjMuVGV4YXNIb2xkZW1Qcm90b2J1Zi5HYW1l",
            "UHJvY2Vzc1BhY2suSGFuZFBva2VyRW50cnkSRAoIYmV0U2hpcHMYCSADKAsy",
            "Mi5UZXhhc0hvbGRlbVByb3RvYnVmLkdhbWVQcm9jZXNzUGFjay5CZXRTaGlw",
            "c0VudHJ5EkYKCXVzZXJDaGlwcxgKIAMoCzIzLlRleGFzSG9sZGVtUHJvdG9i",
            "dWYuR2FtZVByb2Nlc3NQYWNrLlVzZXJDaGlwc0VudHJ5EkgKCnBva2VyU2hh",
            "cGUYCyADKAsyNC5UZXhhc0hvbGRlbVByb3RvYnVmLkdhbWVQcm9jZXNzUGFj",
            "ay5Qb2tlclNoYXBlRW50cnkSSAoKdXNlclN0YXRlcxgMIAMoCzI0LlRleGFz",
            "SG9sZGVtUHJvdG9idWYuR2FtZVByb2Nlc3NQYWNrLlVzZXJTdGF0ZXNFbnRy",
            "eRIPCgdjdXJyQmV0GA0gASgJEg8KB3dpbm5lcnMYDiADKAkSEAoId2luQ2hp",
            "cHMYDyABKAkaTgoOSGFuZFBva2VyRW50cnkSCwoDa2V5GAEgASgJEisKBXZh",
            "bHVlGAIgASgLMhwuVGV4YXNIb2xkZW1Qcm90b2J1Zi5JbnRMaXN0OgI4ARov",
            "Cg1CZXRTaGlwc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAEaMAoOVXNlckNoaXBzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ARoxCg9Qb2tlclNoYXBlRW50cnkSCwoDa2V5GAEgASgJEg0KBXZh",
            "bHVlGAIgASgJOgI4ARpVCg9Vc2VyU3RhdGVzRW50cnkSCwoDa2V5GAEgASgJ",
            "EjEKBXZhbHVlGAIgASgOMiIuVGV4YXNIb2xkZW1Qcm90b2J1Zi5Vc2VyR2Ft",
            "ZVN0YXRlOgI4ASJ1Cg5HYW1lQWN0aW9uUGFjaxIWCg5hY3Rpb25OaWNrTmFt",
            "ZRgBIAEoCRI5Cg11c2VyR2FtZVN0YXRlGAIgASgOMiIuVGV4YXNIb2xkZW1Q",
            "cm90b2J1Zi5Vc2VyR2FtZVN0YXRlEhAKCGJldFZhbHVlGAMgASgJIkwKDEFj",
            "dGlvbmVyUGFjaxIQCghhY3Rpb25lchgBIAEoCRIRCgljb3VudGRvd24YAiAB",
            "KAISFwoPaXNGaXJzdEFjdGlvbmVyGAMgASgIIhkKB0ludExpc3QSDgoGdmFs",
            "dWVzGAEgAygFKjwKC1JlcXVlc3RDb2RlEg8KC1JlcXVlc3ROb25lEAASCAoE",
            "VXNlchABEggKBFJvb20QAhIICgRHYW1lEAMqpgIKCkFjdGlvbkNvZGUSDgoK",
            "QWN0aW9uTm9uZRAAEgkKBUxvZ29uEAESCQoFTG9naW4QAhIKCgZMb2dvdXQQ",
            "AxIPCgtHZXRVc2VySW5mbxAEEg4KCkNyZWF0ZVJvb20QBRIMCghKb2luUm9v",
            "bRAGEhEKDVF1aWNrSm9pblJvb20QBxIWChJVcGRhdGVSb29tVXNlckluZm8Q",
            "CBIOCgpVcGRhdGVSb29tEAkSFQoRT3RoZXJVc2VyRXhpdFJvb20QChIMCghF",
            "eGl0Um9vbRALEhIKDlJldmlzZVVzZXJJbmZvEAwSDQoJU3RhcnRHYW1lEA0S",
            "DQoJR2FtZVN0YWdlEA4SEgoOU2hvd1VzZXJBY3Rpb24QDxIRCg1BY3Rpb25l",
            "ck9yZGVyEBAqYQoKUmV0dXJuQ29kZRIOCgpSZXR1cm5Ob25lEAASCwoHU3Vj",
            "Y2VlZBABEggKBEZhaWwQAhIOCgpEdXBsaWNhdGVkEAMSCwoHTm90Um9vbRAE",
            "Eg8KC1dyb25nRm9ybWF0EAUqLwoMU2VuZE1vZGVDb2RlEgwKCE1vZGVOb25l",
            "EAASEQoNUm9vbUJyb2FkY2FzdBABKmgKC0dhbWVQcm9jZXNzEg8KC1Byb2Nl",
            "c3NOb25lEAASDAoIU2V0QmxpbmQQARILCgdQcmVmbG9wEAISCAoERmxvcBAD",
            "EggKBFR1cm4QBBIJCgVSaXZlchAFEg4KCkdhbWVSZXN1bHQQBipVCg1Vc2Vy",
            "R2FtZVN0YXRlEg0KCVN0YXRlTm9uZRAAEgsKB1BsYXlpbmcQARIJCgVBYm9y",
            "dBACEggKBFBhc3MQAxIKCgZGb2xsb3cQBBIHCgNBZGQQBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TexasHoldemProtobuf.RequestCode), typeof(global::TexasHoldemProtobuf.ActionCode), typeof(global::TexasHoldemProtobuf.ReturnCode), typeof(global::TexasHoldemProtobuf.SendModeCode), typeof(global::TexasHoldemProtobuf.GameProcess), typeof(global::TexasHoldemProtobuf.UserGameState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.MainPack), global::TexasHoldemProtobuf.MainPack.Parser, new[]{ "RequestCode", "ActionCode", "ReturnCode", "SendModeCode", "ReviseUserInfoPack", "LoginPack", "RoomPack", "UserInfoPack", "ComputerPack", "GameProcessPack", "GameActionPack", "ActionerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.LoginPack), global::TexasHoldemProtobuf.LoginPack.Parser, new[]{ "Account", "Password", "Avatar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.UserInfoPack), global::TexasHoldemProtobuf.UserInfoPack.Parser, new[]{ "GameSeat", "NickName", "Avatar", "Cash", "Chips" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.ReviseUserInfoPack), global::TexasHoldemProtobuf.ReviseUserInfoPack.Parser, new[]{ "ReviseName", "ReviseValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.RoomPack), global::TexasHoldemProtobuf.RoomPack.Parser, new[]{ "RoomName", "RoomBigBlind", "MaxCount", "CurrCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.ComputerPack), global::TexasHoldemProtobuf.ComputerPack.Parser, new[]{ "NickName", "Avatar", "BetChips", "Chips", "GameState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.GameProcessPack), global::TexasHoldemProtobuf.GameProcessPack.Parser, new[]{ "GameProcess", "ActionUser", "SmallBlinder", "BigBlinder", "BigBlindValue", "TotalBetChips", "Result", "HandPoker", "BetShips", "UserChips", "PokerShape", "UserStates", "CurrBet", "Winners", "WinChips" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.GameActionPack), global::TexasHoldemProtobuf.GameActionPack.Parser, new[]{ "ActionNickName", "UserGameState", "BetValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.ActionerPack), global::TexasHoldemProtobuf.ActionerPack.Parser, new[]{ "Actioner", "Countdown", "IsFirstActioner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.IntList), global::TexasHoldemProtobuf.IntList.Parser, new[]{ "Values" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    /// <summary>
    ///用戶
    /// </summary>
    [pbr::OriginalName("User")] User = 1,
    /// <summary>
    ///房間
    /// </summary>
    [pbr::OriginalName("Room")] Room = 2,
    /// <summary>
    ///遊戲
    /// </summary>
    [pbr::OriginalName("Game")] Game = 3,
  }

  /// <summary>
  ///執行方法名稱
  /// </summary>
  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    ///註冊
    /// </summary>
    [pbr::OriginalName("Logon")] Logon = 1,
    /// <summary>
    ///登入
    /// </summary>
    [pbr::OriginalName("Login")] Login = 2,
    /// <summary>
    ///登出
    /// </summary>
    [pbr::OriginalName("Logout")] Logout = 3,
    /// <summary>
    ///獲取用戶訊息
    /// </summary>
    [pbr::OriginalName("GetUserInfo")] GetUserInfo = 4,
    /// <summary>
    ///創建房間
    /// </summary>
    [pbr::OriginalName("CreateRoom")] CreateRoom = 5,
    /// <summary>
    ///加入指定房間
    /// </summary>
    [pbr::OriginalName("JoinRoom")] JoinRoom = 6,
    /// <summary>
    ///快速加入房間
    /// </summary>
    [pbr::OriginalName("QuickJoinRoom")] QuickJoinRoom = 7,
    /// <summary>
    ///更新房間用戶訊息
    /// </summary>
    [pbr::OriginalName("UpdateRoomUserInfo")] UpdateRoomUserInfo = 8,
    /// <summary>
    ///刷新房間列表
    /// </summary>
    [pbr::OriginalName("UpdateRoom")] UpdateRoom = 9,
    /// <summary>
    ///其他用戶離開房間
    /// </summary>
    [pbr::OriginalName("OtherUserExitRoom")] OtherUserExitRoom = 10,
    /// <summary>
    ///離開房間
    /// </summary>
    [pbr::OriginalName("ExitRoom")] ExitRoom = 11,
    /// <summary>
    ///修改用戶資料
    /// </summary>
    [pbr::OriginalName("ReviseUserInfo")] ReviseUserInfo = 12,
    /// <summary>
    ///開始遊戲
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 13,
    /// <summary>
    ///遊戲階段
    /// </summary>
    [pbr::OriginalName("GameStage")] GameStage = 14,
    /// <summary>
    ///演出玩家行動
    /// </summary>
    [pbr::OriginalName("ShowUserAction")] ShowUserAction = 15,
    /// <summary>
    ///行動者指令
    /// </summary>
    [pbr::OriginalName("ActionerOrder")] ActionerOrder = 16,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    /// <summary>
    ///成功
    /// </summary>
    [pbr::OriginalName("Succeed")] Succeed = 1,
    /// <summary>
    ///失敗
    /// </summary>
    [pbr::OriginalName("Fail")] Fail = 2,
    /// <summary>
    ///重複
    /// </summary>
    [pbr::OriginalName("Duplicated")] Duplicated = 3,
    /// <summary>
    ///房間不存在
    /// </summary>
    [pbr::OriginalName("NotRoom")] NotRoom = 4,
    /// <summary>
    ///格式錯誤
    /// </summary>
    [pbr::OriginalName("WrongFormat")] WrongFormat = 5,
  }

  /// <summary>
  ///發送模式
  /// </summary>
  public enum SendModeCode {
    [pbr::OriginalName("ModeNone")] ModeNone = 0,
    /// <summary>
    ///房間廣播
    /// </summary>
    [pbr::OriginalName("RoomBroadcast")] RoomBroadcast = 1,
  }

  /// <summary>
  ///遊戲進程
  /// </summary>
  public enum GameProcess {
    [pbr::OriginalName("ProcessNone")] ProcessNone = 0,
    /// <summary>
    ///選擇大小盲
    /// </summary>
    [pbr::OriginalName("SetBlind")] SetBlind = 1,
    /// <summary>
    ///翻牌前
    /// </summary>
    [pbr::OriginalName("Preflop")] Preflop = 2,
    /// <summary>
    ///翻牌
    /// </summary>
    [pbr::OriginalName("Flop")] Flop = 3,
    /// <summary>
    ///轉牌
    /// </summary>
    [pbr::OriginalName("Turn")] Turn = 4,
    /// <summary>
    ///河牌
    /// </summary>
    [pbr::OriginalName("River")] River = 5,
    /// <summary>
    ///遊戲結果
    /// </summary>
    [pbr::OriginalName("GameResult")] GameResult = 6,
  }

  /// <summary>
  ///玩家遊戲狀態
  /// </summary>
  public enum UserGameState {
    [pbr::OriginalName("StateNone")] StateNone = 0,
    /// <summary>
    ///遊戲中
    /// </summary>
    [pbr::OriginalName("Playing")] Playing = 1,
    /// <summary>
    ///棄牌
    /// </summary>
    [pbr::OriginalName("Abort")] Abort = 2,
    /// <summary>
    ///過牌
    /// </summary>
    [pbr::OriginalName("Pass")] Pass = 3,
    /// <summary>
    ///跟注
    /// </summary>
    [pbr::OriginalName("Follow")] Follow = 4,
    /// <summary>
    ///加注	
    /// </summary>
    [pbr::OriginalName("Add")] Add = 5,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestCode_ = other.requestCode_;
      actionCode_ = other.actionCode_;
      returnCode_ = other.returnCode_;
      sendModeCode_ = other.sendModeCode_;
      reviseUserInfoPack_ = other.reviseUserInfoPack_ != null ? other.reviseUserInfoPack_.Clone() : null;
      loginPack_ = other.loginPack_ != null ? other.loginPack_.Clone() : null;
      roomPack_ = other.roomPack_.Clone();
      userInfoPack_ = other.userInfoPack_.Clone();
      computerPack_ = other.computerPack_ != null ? other.computerPack_.Clone() : null;
      gameProcessPack_ = other.gameProcessPack_ != null ? other.gameProcessPack_.Clone() : null;
      gameActionPack_ = other.gameActionPack_ != null ? other.gameActionPack_.Clone() : null;
      actionerPack_ = other.actionerPack_ != null ? other.actionerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::TexasHoldemProtobuf.RequestCode requestCode_ = global::TexasHoldemProtobuf.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.RequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "actionCode" field.</summary>
    public const int ActionCodeFieldNumber = 2;
    private global::TexasHoldemProtobuf.ActionCode actionCode_ = global::TexasHoldemProtobuf.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ActionCode ActionCode {
      get { return actionCode_; }
      set {
        actionCode_ = value;
      }
    }

    /// <summary>Field number for the "returnCode" field.</summary>
    public const int ReturnCodeFieldNumber = 3;
    private global::TexasHoldemProtobuf.ReturnCode returnCode_ = global::TexasHoldemProtobuf.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "sendModeCode" field.</summary>
    public const int SendModeCodeFieldNumber = 4;
    private global::TexasHoldemProtobuf.SendModeCode sendModeCode_ = global::TexasHoldemProtobuf.SendModeCode.ModeNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.SendModeCode SendModeCode {
      get { return sendModeCode_; }
      set {
        sendModeCode_ = value;
      }
    }

    /// <summary>Field number for the "ReviseUserInfoPack" field.</summary>
    public const int ReviseUserInfoPackFieldNumber = 5;
    private global::TexasHoldemProtobuf.ReviseUserInfoPack reviseUserInfoPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ReviseUserInfoPack ReviseUserInfoPack {
      get { return reviseUserInfoPack_; }
      set {
        reviseUserInfoPack_ = value;
      }
    }

    /// <summary>Field number for the "loginPack" field.</summary>
    public const int LoginPackFieldNumber = 6;
    private global::TexasHoldemProtobuf.LoginPack loginPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.LoginPack LoginPack {
      get { return loginPack_; }
      set {
        loginPack_ = value;
      }
    }

    /// <summary>Field number for the "roomPack" field.</summary>
    public const int RoomPackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::TexasHoldemProtobuf.RoomPack> _repeated_roomPack_codec
        = pb::FieldCodec.ForMessage(58, global::TexasHoldemProtobuf.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::TexasHoldemProtobuf.RoomPack> roomPack_ = new pbc::RepeatedField<global::TexasHoldemProtobuf.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TexasHoldemProtobuf.RoomPack> RoomPack {
      get { return roomPack_; }
    }

    /// <summary>Field number for the "userInfoPack" field.</summary>
    public const int UserInfoPackFieldNumber = 8;
    private static readonly pb::FieldCodec<global::TexasHoldemProtobuf.UserInfoPack> _repeated_userInfoPack_codec
        = pb::FieldCodec.ForMessage(66, global::TexasHoldemProtobuf.UserInfoPack.Parser);
    private readonly pbc::RepeatedField<global::TexasHoldemProtobuf.UserInfoPack> userInfoPack_ = new pbc::RepeatedField<global::TexasHoldemProtobuf.UserInfoPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TexasHoldemProtobuf.UserInfoPack> UserInfoPack {
      get { return userInfoPack_; }
    }

    /// <summary>Field number for the "computerPack" field.</summary>
    public const int ComputerPackFieldNumber = 9;
    private global::TexasHoldemProtobuf.ComputerPack computerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ComputerPack ComputerPack {
      get { return computerPack_; }
      set {
        computerPack_ = value;
      }
    }

    /// <summary>Field number for the "gameProcessPack" field.</summary>
    public const int GameProcessPackFieldNumber = 10;
    private global::TexasHoldemProtobuf.GameProcessPack gameProcessPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.GameProcessPack GameProcessPack {
      get { return gameProcessPack_; }
      set {
        gameProcessPack_ = value;
      }
    }

    /// <summary>Field number for the "gameActionPack" field.</summary>
    public const int GameActionPackFieldNumber = 11;
    private global::TexasHoldemProtobuf.GameActionPack gameActionPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.GameActionPack GameActionPack {
      get { return gameActionPack_; }
      set {
        gameActionPack_ = value;
      }
    }

    /// <summary>Field number for the "actionerPack" field.</summary>
    public const int ActionerPackFieldNumber = 12;
    private global::TexasHoldemProtobuf.ActionerPack actionerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ActionerPack ActionerPack {
      get { return actionerPack_; }
      set {
        actionerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ActionCode != other.ActionCode) return false;
      if (ReturnCode != other.ReturnCode) return false;
      if (SendModeCode != other.SendModeCode) return false;
      if (!object.Equals(ReviseUserInfoPack, other.ReviseUserInfoPack)) return false;
      if (!object.Equals(LoginPack, other.LoginPack)) return false;
      if(!roomPack_.Equals(other.roomPack_)) return false;
      if(!userInfoPack_.Equals(other.userInfoPack_)) return false;
      if (!object.Equals(ComputerPack, other.ComputerPack)) return false;
      if (!object.Equals(GameProcessPack, other.GameProcessPack)) return false;
      if (!object.Equals(GameActionPack, other.GameActionPack)) return false;
      if (!object.Equals(ActionerPack, other.ActionerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) hash ^= RequestCode.GetHashCode();
      if (ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) hash ^= ActionCode.GetHashCode();
      if (ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) hash ^= ReturnCode.GetHashCode();
      if (SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) hash ^= SendModeCode.GetHashCode();
      if (reviseUserInfoPack_ != null) hash ^= ReviseUserInfoPack.GetHashCode();
      if (loginPack_ != null) hash ^= LoginPack.GetHashCode();
      hash ^= roomPack_.GetHashCode();
      hash ^= userInfoPack_.GetHashCode();
      if (computerPack_ != null) hash ^= ComputerPack.GetHashCode();
      if (gameProcessPack_ != null) hash ^= GameProcessPack.GetHashCode();
      if (gameActionPack_ != null) hash ^= GameActionPack.GetHashCode();
      if (actionerPack_ != null) hash ^= ActionerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionCode);
      }
      if (ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReturnCode);
      }
      if (SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SendModeCode);
      }
      if (reviseUserInfoPack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ReviseUserInfoPack);
      }
      if (loginPack_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LoginPack);
      }
      roomPack_.WriteTo(output, _repeated_roomPack_codec);
      userInfoPack_.WriteTo(output, _repeated_userInfoPack_codec);
      if (computerPack_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ComputerPack);
      }
      if (gameProcessPack_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(GameProcessPack);
      }
      if (gameActionPack_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(GameActionPack);
      }
      if (actionerPack_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ActionerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionCode);
      }
      if (ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SendModeCode);
      }
      if (reviseUserInfoPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviseUserInfoPack);
      }
      if (loginPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginPack);
      }
      size += roomPack_.CalculateSize(_repeated_roomPack_codec);
      size += userInfoPack_.CalculateSize(_repeated_userInfoPack_codec);
      if (computerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComputerPack);
      }
      if (gameProcessPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameProcessPack);
      }
      if (gameActionPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameActionPack);
      }
      if (actionerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActionerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) {
        RequestCode = other.RequestCode;
      }
      if (other.ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) {
        ActionCode = other.ActionCode;
      }
      if (other.ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) {
        ReturnCode = other.ReturnCode;
      }
      if (other.SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) {
        SendModeCode = other.SendModeCode;
      }
      if (other.reviseUserInfoPack_ != null) {
        if (reviseUserInfoPack_ == null) {
          ReviseUserInfoPack = new global::TexasHoldemProtobuf.ReviseUserInfoPack();
        }
        ReviseUserInfoPack.MergeFrom(other.ReviseUserInfoPack);
      }
      if (other.loginPack_ != null) {
        if (loginPack_ == null) {
          LoginPack = new global::TexasHoldemProtobuf.LoginPack();
        }
        LoginPack.MergeFrom(other.LoginPack);
      }
      roomPack_.Add(other.roomPack_);
      userInfoPack_.Add(other.userInfoPack_);
      if (other.computerPack_ != null) {
        if (computerPack_ == null) {
          ComputerPack = new global::TexasHoldemProtobuf.ComputerPack();
        }
        ComputerPack.MergeFrom(other.ComputerPack);
      }
      if (other.gameProcessPack_ != null) {
        if (gameProcessPack_ == null) {
          GameProcessPack = new global::TexasHoldemProtobuf.GameProcessPack();
        }
        GameProcessPack.MergeFrom(other.GameProcessPack);
      }
      if (other.gameActionPack_ != null) {
        if (gameActionPack_ == null) {
          GameActionPack = new global::TexasHoldemProtobuf.GameActionPack();
        }
        GameActionPack.MergeFrom(other.GameActionPack);
      }
      if (other.actionerPack_ != null) {
        if (actionerPack_ == null) {
          ActionerPack = new global::TexasHoldemProtobuf.ActionerPack();
        }
        ActionerPack.MergeFrom(other.ActionerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::TexasHoldemProtobuf.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActionCode = (global::TexasHoldemProtobuf.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            ReturnCode = (global::TexasHoldemProtobuf.ReturnCode) input.ReadEnum();
            break;
          }
          case 32: {
            SendModeCode = (global::TexasHoldemProtobuf.SendModeCode) input.ReadEnum();
            break;
          }
          case 42: {
            if (reviseUserInfoPack_ == null) {
              ReviseUserInfoPack = new global::TexasHoldemProtobuf.ReviseUserInfoPack();
            }
            input.ReadMessage(ReviseUserInfoPack);
            break;
          }
          case 50: {
            if (loginPack_ == null) {
              LoginPack = new global::TexasHoldemProtobuf.LoginPack();
            }
            input.ReadMessage(LoginPack);
            break;
          }
          case 58: {
            roomPack_.AddEntriesFrom(input, _repeated_roomPack_codec);
            break;
          }
          case 66: {
            userInfoPack_.AddEntriesFrom(input, _repeated_userInfoPack_codec);
            break;
          }
          case 74: {
            if (computerPack_ == null) {
              ComputerPack = new global::TexasHoldemProtobuf.ComputerPack();
            }
            input.ReadMessage(ComputerPack);
            break;
          }
          case 82: {
            if (gameProcessPack_ == null) {
              GameProcessPack = new global::TexasHoldemProtobuf.GameProcessPack();
            }
            input.ReadMessage(GameProcessPack);
            break;
          }
          case 90: {
            if (gameActionPack_ == null) {
              GameActionPack = new global::TexasHoldemProtobuf.GameActionPack();
            }
            input.ReadMessage(GameActionPack);
            break;
          }
          case 98: {
            if (actionerPack_ == null) {
              ActionerPack = new global::TexasHoldemProtobuf.ActionerPack();
            }
            input.ReadMessage(ActionerPack);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///註冊/登入包
  /// </summary>
  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      avatar_ = other.avatar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    ///帳號
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    ///密碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private string avatar_ = "";
    /// <summary>
    ///頭像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (Avatar != other.Avatar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用戶訊息包
  /// </summary>
  public sealed partial class UserInfoPack : pb::IMessage<UserInfoPack> {
    private static readonly pb::MessageParser<UserInfoPack> _parser = new pb::MessageParser<UserInfoPack>(() => new UserInfoPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfoPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoPack(UserInfoPack other) : this() {
      gameSeat_ = other.gameSeat_;
      nickName_ = other.nickName_;
      avatar_ = other.avatar_;
      cash_ = other.cash_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoPack Clone() {
      return new UserInfoPack(this);
    }

    /// <summary>Field number for the "GameSeat" field.</summary>
    public const int GameSeatFieldNumber = 1;
    private int gameSeat_;
    /// <summary>
    ///遊戲座位編號
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameSeat {
      get { return gameSeat_; }
      set {
        gameSeat_ = value;
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    /// <summary>
    ///暱稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private string avatar_ = "";
    /// <summary>
    ///頭像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cash" field.</summary>
    public const int CashFieldNumber = 4;
    private string cash_ = "";
    /// <summary>
    ///用戶金幣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cash {
      get { return cash_; }
      set {
        cash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 5;
    private string chips_ = "";
    /// <summary>
    ///遊戲中籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chips {
      get { return chips_; }
      set {
        chips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfoPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfoPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameSeat != other.GameSeat) return false;
      if (NickName != other.NickName) return false;
      if (Avatar != other.Avatar) return false;
      if (Cash != other.Cash) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameSeat != 0) hash ^= GameSeat.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (Cash.Length != 0) hash ^= Cash.GetHashCode();
      if (Chips.Length != 0) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameSeat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameSeat);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (Cash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Cash);
      }
      if (Chips.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameSeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameSeat);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (Cash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cash);
      }
      if (Chips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfoPack other) {
      if (other == null) {
        return;
      }
      if (other.GameSeat != 0) {
        GameSeat = other.GameSeat;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.Cash.Length != 0) {
        Cash = other.Cash;
      }
      if (other.Chips.Length != 0) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameSeat = input.ReadInt32();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
          case 34: {
            Cash = input.ReadString();
            break;
          }
          case 42: {
            Chips = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///修改用戶資料包
  /// </summary>
  public sealed partial class ReviseUserInfoPack : pb::IMessage<ReviseUserInfoPack> {
    private static readonly pb::MessageParser<ReviseUserInfoPack> _parser = new pb::MessageParser<ReviseUserInfoPack>(() => new ReviseUserInfoPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviseUserInfoPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviseUserInfoPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviseUserInfoPack(ReviseUserInfoPack other) : this() {
      reviseName_ = other.reviseName_;
      reviseValue_ = other.reviseValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviseUserInfoPack Clone() {
      return new ReviseUserInfoPack(this);
    }

    /// <summary>Field number for the "reviseName" field.</summary>
    public const int ReviseNameFieldNumber = 1;
    private string reviseName_ = "";
    /// <summary>
    ///修改項目名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviseName {
      get { return reviseName_; }
      set {
        reviseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reviseValue" field.</summary>
    public const int ReviseValueFieldNumber = 2;
    private string reviseValue_ = "";
    /// <summary>
    ///修改值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviseValue {
      get { return reviseValue_; }
      set {
        reviseValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviseUserInfoPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviseUserInfoPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReviseName != other.ReviseName) return false;
      if (ReviseValue != other.ReviseValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReviseName.Length != 0) hash ^= ReviseName.GetHashCode();
      if (ReviseValue.Length != 0) hash ^= ReviseValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReviseName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReviseName);
      }
      if (ReviseValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReviseValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReviseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReviseName);
      }
      if (ReviseValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReviseValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviseUserInfoPack other) {
      if (other == null) {
        return;
      }
      if (other.ReviseName.Length != 0) {
        ReviseName = other.ReviseName;
      }
      if (other.ReviseValue.Length != 0) {
        ReviseValue = other.ReviseValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReviseName = input.ReadString();
            break;
          }
          case 18: {
            ReviseValue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///房間包
  /// </summary>
  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomName_ = other.roomName_;
      roomBigBlind_ = other.roomBigBlind_;
      maxCount_ = other.maxCount_;
      currCount_ = other.currCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    ///房間名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomBigBlind" field.</summary>
    public const int RoomBigBlindFieldNumber = 2;
    private string roomBigBlind_ = "";
    /// <summary>
    ///大盲
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomBigBlind {
      get { return roomBigBlind_; }
      set {
        roomBigBlind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 3;
    private int maxCount_;
    /// <summary>
    ///房間最大人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "CurrCount" field.</summary>
    public const int CurrCountFieldNumber = 4;
    private int currCount_;
    /// <summary>
    ///房間當前人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrCount {
      get { return currCount_; }
      set {
        currCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (RoomBigBlind != other.RoomBigBlind) return false;
      if (MaxCount != other.MaxCount) return false;
      if (CurrCount != other.CurrCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomBigBlind.Length != 0) hash ^= RoomBigBlind.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (CurrCount != 0) hash ^= CurrCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (RoomBigBlind.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomBigBlind);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxCount);
      }
      if (CurrCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomBigBlind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomBigBlind);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (CurrCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomBigBlind.Length != 0) {
        RoomBigBlind = other.RoomBigBlind;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.CurrCount != 0) {
        CurrCount = other.CurrCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            RoomBigBlind = input.ReadString();
            break;
          }
          case 24: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 32: {
            CurrCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///電腦玩家包
  /// </summary>
  public sealed partial class ComputerPack : pb::IMessage<ComputerPack> {
    private static readonly pb::MessageParser<ComputerPack> _parser = new pb::MessageParser<ComputerPack>(() => new ComputerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputerPack(ComputerPack other) : this() {
      nickName_ = other.nickName_;
      avatar_ = other.avatar_;
      betChips_ = other.betChips_;
      chips_ = other.chips_;
      gameState_ = other.gameState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputerPack Clone() {
      return new ComputerPack(this);
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 1;
    private string nickName_ = "";
    /// <summary>
    ///暱稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 2;
    private string avatar_ = "";
    /// <summary>
    ///頭像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "betChips" field.</summary>
    public const int BetChipsFieldNumber = 3;
    private string betChips_ = "";
    /// <summary>
    ///下注籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BetChips {
      get { return betChips_; }
      set {
        betChips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 4;
    private string chips_ = "";
    /// <summary>
    ///遊戲中籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chips {
      get { return chips_; }
      set {
        chips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameState" field.</summary>
    public const int GameStateFieldNumber = 5;
    private global::TexasHoldemProtobuf.UserGameState gameState_ = global::TexasHoldemProtobuf.UserGameState.StateNone;
    /// <summary>
    ///遊戲行動
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.UserGameState GameState {
      get { return gameState_; }
      set {
        gameState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NickName != other.NickName) return false;
      if (Avatar != other.Avatar) return false;
      if (BetChips != other.BetChips) return false;
      if (Chips != other.Chips) return false;
      if (GameState != other.GameState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (BetChips.Length != 0) hash ^= BetChips.GetHashCode();
      if (Chips.Length != 0) hash ^= Chips.GetHashCode();
      if (GameState != global::TexasHoldemProtobuf.UserGameState.StateNone) hash ^= GameState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NickName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NickName);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Avatar);
      }
      if (BetChips.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BetChips);
      }
      if (Chips.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Chips);
      }
      if (GameState != global::TexasHoldemProtobuf.UserGameState.StateNone) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (BetChips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BetChips);
      }
      if (Chips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chips);
      }
      if (GameState != global::TexasHoldemProtobuf.UserGameState.StateNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputerPack other) {
      if (other == null) {
        return;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.BetChips.Length != 0) {
        BetChips = other.BetChips;
      }
      if (other.Chips.Length != 0) {
        Chips = other.Chips;
      }
      if (other.GameState != global::TexasHoldemProtobuf.UserGameState.StateNone) {
        GameState = other.GameState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NickName = input.ReadString();
            break;
          }
          case 18: {
            Avatar = input.ReadString();
            break;
          }
          case 26: {
            BetChips = input.ReadString();
            break;
          }
          case 34: {
            Chips = input.ReadString();
            break;
          }
          case 40: {
            GameState = (global::TexasHoldemProtobuf.UserGameState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///遊戲進程包
  /// </summary>
  public sealed partial class GameProcessPack : pb::IMessage<GameProcessPack> {
    private static readonly pb::MessageParser<GameProcessPack> _parser = new pb::MessageParser<GameProcessPack>(() => new GameProcessPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameProcessPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProcessPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProcessPack(GameProcessPack other) : this() {
      gameProcess_ = other.gameProcess_;
      actionUser_ = other.actionUser_;
      smallBlinder_ = other.smallBlinder_;
      bigBlinder_ = other.bigBlinder_;
      bigBlindValue_ = other.bigBlindValue_;
      totalBetChips_ = other.totalBetChips_;
      result_ = other.result_.Clone();
      handPoker_ = other.handPoker_.Clone();
      betShips_ = other.betShips_.Clone();
      userChips_ = other.userChips_.Clone();
      pokerShape_ = other.pokerShape_.Clone();
      userStates_ = other.userStates_.Clone();
      currBet_ = other.currBet_;
      winners_ = other.winners_.Clone();
      winChips_ = other.winChips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProcessPack Clone() {
      return new GameProcessPack(this);
    }

    /// <summary>Field number for the "gameProcess" field.</summary>
    public const int GameProcessFieldNumber = 1;
    private global::TexasHoldemProtobuf.GameProcess gameProcess_ = global::TexasHoldemProtobuf.GameProcess.ProcessNone;
    /// <summary>
    ///遊戲進程
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.GameProcess GameProcess {
      get { return gameProcess_; }
      set {
        gameProcess_ = value;
      }
    }

    /// <summary>Field number for the "actionUser" field.</summary>
    public const int ActionUserFieldNumber = 2;
    private string actionUser_ = "";
    /// <summary>
    ///行動玩家(暱稱)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionUser {
      get { return actionUser_; }
      set {
        actionUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "smallBlinder" field.</summary>
    public const int SmallBlinderFieldNumber = 3;
    private string smallBlinder_ = "";
    /// <summary>
    ///小盲玩家(暱稱, -1=電腦)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SmallBlinder {
      get { return smallBlinder_; }
      set {
        smallBlinder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bigBlinder" field.</summary>
    public const int BigBlinderFieldNumber = 4;
    private string bigBlinder_ = "";
    /// <summary>
    ///大盲玩家(暱稱, -1=電腦)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BigBlinder {
      get { return bigBlinder_; }
      set {
        bigBlinder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bigBlindValue" field.</summary>
    public const int BigBlindValueFieldNumber = 5;
    private string bigBlindValue_ = "";
    /// <summary>
    ///大盲籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BigBlindValue {
      get { return bigBlindValue_; }
      set {
        bigBlindValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "totalBetChips" field.</summary>
    public const int TotalBetChipsFieldNumber = 6;
    private string totalBetChips_ = "";
    /// <summary>
    ///總下注籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TotalBetChips {
      get { return totalBetChips_; }
      set {
        totalBetChips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_result_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> result_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///牌面結果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Result {
      get { return result_; }
    }

    /// <summary>Field number for the "handPoker" field.</summary>
    public const int HandPokerFieldNumber = 8;
    private static readonly pbc::MapField<string, global::TexasHoldemProtobuf.IntList>.Codec _map_handPoker_codec
        = new pbc::MapField<string, global::TexasHoldemProtobuf.IntList>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::TexasHoldemProtobuf.IntList.Parser), 66);
    private readonly pbc::MapField<string, global::TexasHoldemProtobuf.IntList> handPoker_ = new pbc::MapField<string, global::TexasHoldemProtobuf.IntList>();
    /// <summary>
    ///所有玩家手牌(暱稱, 手牌)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::TexasHoldemProtobuf.IntList> HandPoker {
      get { return handPoker_; }
    }

    /// <summary>Field number for the "betShips" field.</summary>
    public const int BetShipsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_betShips_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> betShips_ = new pbc::MapField<string, string>();
    /// <summary>
    ///所有玩家下注籌碼(暱稱, 下注)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> BetShips {
      get { return betShips_; }
    }

    /// <summary>Field number for the "userChips" field.</summary>
    public const int UserChipsFieldNumber = 10;
    private static readonly pbc::MapField<string, string>.Codec _map_userChips_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<string, string> userChips_ = new pbc::MapField<string, string>();
    /// <summary>
    ///所有玩家遊戲中籌碼(暱稱, 籌碼)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> UserChips {
      get { return userChips_; }
    }

    /// <summary>Field number for the "pokerShape" field.</summary>
    public const int PokerShapeFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_pokerShape_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 90);
    private readonly pbc::MapField<string, string> pokerShape_ = new pbc::MapField<string, string>();
    /// <summary>
    ///所有玩家/電腦牌型(暱稱, 牌型)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> PokerShape {
      get { return pokerShape_; }
    }

    /// <summary>Field number for the "userStates" field.</summary>
    public const int UserStatesFieldNumber = 12;
    private static readonly pbc::MapField<string, global::TexasHoldemProtobuf.UserGameState>.Codec _map_userStates_codec
        = new pbc::MapField<string, global::TexasHoldemProtobuf.UserGameState>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::TexasHoldemProtobuf.UserGameState) x, global::TexasHoldemProtobuf.UserGameState.StateNone), 98);
    private readonly pbc::MapField<string, global::TexasHoldemProtobuf.UserGameState> userStates_ = new pbc::MapField<string, global::TexasHoldemProtobuf.UserGameState>();
    /// <summary>
    ///所有玩家狀態/電腦牌型(暱稱, 狀態)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::TexasHoldemProtobuf.UserGameState> UserStates {
      get { return userStates_; }
    }

    /// <summary>Field number for the "currBet" field.</summary>
    public const int CurrBetFieldNumber = 13;
    private string currBet_ = "";
    /// <summary>
    ///當輪下注籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrBet {
      get { return currBet_; }
      set {
        currBet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "winners" field.</summary>
    public const int WinnersFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_winners_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> winners_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///贏家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Winners {
      get { return winners_; }
    }

    /// <summary>Field number for the "winChips" field.</summary>
    public const int WinChipsFieldNumber = 15;
    private string winChips_ = "";
    /// <summary>
    ///贏得籌碼值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WinChips {
      get { return winChips_; }
      set {
        winChips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameProcessPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameProcessPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameProcess != other.GameProcess) return false;
      if (ActionUser != other.ActionUser) return false;
      if (SmallBlinder != other.SmallBlinder) return false;
      if (BigBlinder != other.BigBlinder) return false;
      if (BigBlindValue != other.BigBlindValue) return false;
      if (TotalBetChips != other.TotalBetChips) return false;
      if(!result_.Equals(other.result_)) return false;
      if (!HandPoker.Equals(other.HandPoker)) return false;
      if (!BetShips.Equals(other.BetShips)) return false;
      if (!UserChips.Equals(other.UserChips)) return false;
      if (!PokerShape.Equals(other.PokerShape)) return false;
      if (!UserStates.Equals(other.UserStates)) return false;
      if (CurrBet != other.CurrBet) return false;
      if(!winners_.Equals(other.winners_)) return false;
      if (WinChips != other.WinChips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) hash ^= GameProcess.GetHashCode();
      if (ActionUser.Length != 0) hash ^= ActionUser.GetHashCode();
      if (SmallBlinder.Length != 0) hash ^= SmallBlinder.GetHashCode();
      if (BigBlinder.Length != 0) hash ^= BigBlinder.GetHashCode();
      if (BigBlindValue.Length != 0) hash ^= BigBlindValue.GetHashCode();
      if (TotalBetChips.Length != 0) hash ^= TotalBetChips.GetHashCode();
      hash ^= result_.GetHashCode();
      hash ^= HandPoker.GetHashCode();
      hash ^= BetShips.GetHashCode();
      hash ^= UserChips.GetHashCode();
      hash ^= PokerShape.GetHashCode();
      hash ^= UserStates.GetHashCode();
      if (CurrBet.Length != 0) hash ^= CurrBet.GetHashCode();
      hash ^= winners_.GetHashCode();
      if (WinChips.Length != 0) hash ^= WinChips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameProcess);
      }
      if (ActionUser.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActionUser);
      }
      if (SmallBlinder.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SmallBlinder);
      }
      if (BigBlinder.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BigBlinder);
      }
      if (BigBlindValue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BigBlindValue);
      }
      if (TotalBetChips.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TotalBetChips);
      }
      result_.WriteTo(output, _repeated_result_codec);
      handPoker_.WriteTo(output, _map_handPoker_codec);
      betShips_.WriteTo(output, _map_betShips_codec);
      userChips_.WriteTo(output, _map_userChips_codec);
      pokerShape_.WriteTo(output, _map_pokerShape_codec);
      userStates_.WriteTo(output, _map_userStates_codec);
      if (CurrBet.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CurrBet);
      }
      winners_.WriteTo(output, _repeated_winners_codec);
      if (WinChips.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(WinChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameProcess);
      }
      if (ActionUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionUser);
      }
      if (SmallBlinder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SmallBlinder);
      }
      if (BigBlinder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BigBlinder);
      }
      if (BigBlindValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BigBlindValue);
      }
      if (TotalBetChips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TotalBetChips);
      }
      size += result_.CalculateSize(_repeated_result_codec);
      size += handPoker_.CalculateSize(_map_handPoker_codec);
      size += betShips_.CalculateSize(_map_betShips_codec);
      size += userChips_.CalculateSize(_map_userChips_codec);
      size += pokerShape_.CalculateSize(_map_pokerShape_codec);
      size += userStates_.CalculateSize(_map_userStates_codec);
      if (CurrBet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrBet);
      }
      size += winners_.CalculateSize(_repeated_winners_codec);
      if (WinChips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WinChips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameProcessPack other) {
      if (other == null) {
        return;
      }
      if (other.GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) {
        GameProcess = other.GameProcess;
      }
      if (other.ActionUser.Length != 0) {
        ActionUser = other.ActionUser;
      }
      if (other.SmallBlinder.Length != 0) {
        SmallBlinder = other.SmallBlinder;
      }
      if (other.BigBlinder.Length != 0) {
        BigBlinder = other.BigBlinder;
      }
      if (other.BigBlindValue.Length != 0) {
        BigBlindValue = other.BigBlindValue;
      }
      if (other.TotalBetChips.Length != 0) {
        TotalBetChips = other.TotalBetChips;
      }
      result_.Add(other.result_);
      handPoker_.Add(other.handPoker_);
      betShips_.Add(other.betShips_);
      userChips_.Add(other.userChips_);
      pokerShape_.Add(other.pokerShape_);
      userStates_.Add(other.userStates_);
      if (other.CurrBet.Length != 0) {
        CurrBet = other.CurrBet;
      }
      winners_.Add(other.winners_);
      if (other.WinChips.Length != 0) {
        WinChips = other.WinChips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameProcess = (global::TexasHoldemProtobuf.GameProcess) input.ReadEnum();
            break;
          }
          case 18: {
            ActionUser = input.ReadString();
            break;
          }
          case 26: {
            SmallBlinder = input.ReadString();
            break;
          }
          case 34: {
            BigBlinder = input.ReadString();
            break;
          }
          case 42: {
            BigBlindValue = input.ReadString();
            break;
          }
          case 50: {
            TotalBetChips = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
          case 66: {
            handPoker_.AddEntriesFrom(input, _map_handPoker_codec);
            break;
          }
          case 74: {
            betShips_.AddEntriesFrom(input, _map_betShips_codec);
            break;
          }
          case 82: {
            userChips_.AddEntriesFrom(input, _map_userChips_codec);
            break;
          }
          case 90: {
            pokerShape_.AddEntriesFrom(input, _map_pokerShape_codec);
            break;
          }
          case 98: {
            userStates_.AddEntriesFrom(input, _map_userStates_codec);
            break;
          }
          case 106: {
            CurrBet = input.ReadString();
            break;
          }
          case 114: {
            winners_.AddEntriesFrom(input, _repeated_winners_codec);
            break;
          }
          case 122: {
            WinChips = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///遊戲行動包
  /// </summary>
  public sealed partial class GameActionPack : pb::IMessage<GameActionPack> {
    private static readonly pb::MessageParser<GameActionPack> _parser = new pb::MessageParser<GameActionPack>(() => new GameActionPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameActionPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameActionPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameActionPack(GameActionPack other) : this() {
      actionNickName_ = other.actionNickName_;
      userGameState_ = other.userGameState_;
      betValue_ = other.betValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameActionPack Clone() {
      return new GameActionPack(this);
    }

    /// <summary>Field number for the "actionNickName" field.</summary>
    public const int ActionNickNameFieldNumber = 1;
    private string actionNickName_ = "";
    /// <summary>
    ///玩家暱稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionNickName {
      get { return actionNickName_; }
      set {
        actionNickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userGameState" field.</summary>
    public const int UserGameStateFieldNumber = 2;
    private global::TexasHoldemProtobuf.UserGameState userGameState_ = global::TexasHoldemProtobuf.UserGameState.StateNone;
    /// <summary>
    ///玩家遊戲狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.UserGameState UserGameState {
      get { return userGameState_; }
      set {
        userGameState_ = value;
      }
    }

    /// <summary>Field number for the "betValue" field.</summary>
    public const int BetValueFieldNumber = 3;
    private string betValue_ = "";
    /// <summary>
    ///下注值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BetValue {
      get { return betValue_; }
      set {
        betValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameActionPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameActionPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionNickName != other.ActionNickName) return false;
      if (UserGameState != other.UserGameState) return false;
      if (BetValue != other.BetValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionNickName.Length != 0) hash ^= ActionNickName.GetHashCode();
      if (UserGameState != global::TexasHoldemProtobuf.UserGameState.StateNone) hash ^= UserGameState.GetHashCode();
      if (BetValue.Length != 0) hash ^= BetValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionNickName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionNickName);
      }
      if (UserGameState != global::TexasHoldemProtobuf.UserGameState.StateNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) UserGameState);
      }
      if (BetValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BetValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionNickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionNickName);
      }
      if (UserGameState != global::TexasHoldemProtobuf.UserGameState.StateNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserGameState);
      }
      if (BetValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BetValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameActionPack other) {
      if (other == null) {
        return;
      }
      if (other.ActionNickName.Length != 0) {
        ActionNickName = other.ActionNickName;
      }
      if (other.UserGameState != global::TexasHoldemProtobuf.UserGameState.StateNone) {
        UserGameState = other.UserGameState;
      }
      if (other.BetValue.Length != 0) {
        BetValue = other.BetValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActionNickName = input.ReadString();
            break;
          }
          case 16: {
            UserGameState = (global::TexasHoldemProtobuf.UserGameState) input.ReadEnum();
            break;
          }
          case 26: {
            BetValue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///行動者包
  /// </summary>
  public sealed partial class ActionerPack : pb::IMessage<ActionerPack> {
    private static readonly pb::MessageParser<ActionerPack> _parser = new pb::MessageParser<ActionerPack>(() => new ActionerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionerPack(ActionerPack other) : this() {
      actioner_ = other.actioner_;
      countdown_ = other.countdown_;
      isFirstActioner_ = other.isFirstActioner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionerPack Clone() {
      return new ActionerPack(this);
    }

    /// <summary>Field number for the "actioner" field.</summary>
    public const int ActionerFieldNumber = 1;
    private string actioner_ = "";
    /// <summary>
    ///行動玩家暱稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Actioner {
      get { return actioner_; }
      set {
        actioner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "countdown" field.</summary>
    public const int CountdownFieldNumber = 2;
    private float countdown_;
    /// <summary>
    ///倒數時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Countdown {
      get { return countdown_; }
      set {
        countdown_ = value;
      }
    }

    /// <summary>Field number for the "isFirstActioner" field.</summary>
    public const int IsFirstActionerFieldNumber = 3;
    private bool isFirstActioner_;
    /// <summary>
    ///首位行動者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstActioner {
      get { return isFirstActioner_; }
      set {
        isFirstActioner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Actioner != other.Actioner) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Countdown, other.Countdown)) return false;
      if (IsFirstActioner != other.IsFirstActioner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Actioner.Length != 0) hash ^= Actioner.GetHashCode();
      if (Countdown != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Countdown);
      if (IsFirstActioner != false) hash ^= IsFirstActioner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Actioner.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Actioner);
      }
      if (Countdown != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Countdown);
      }
      if (IsFirstActioner != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFirstActioner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Actioner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Actioner);
      }
      if (Countdown != 0F) {
        size += 1 + 4;
      }
      if (IsFirstActioner != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionerPack other) {
      if (other == null) {
        return;
      }
      if (other.Actioner.Length != 0) {
        Actioner = other.Actioner;
      }
      if (other.Countdown != 0F) {
        Countdown = other.Countdown;
      }
      if (other.IsFirstActioner != false) {
        IsFirstActioner = other.IsFirstActioner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Actioner = input.ReadString();
            break;
          }
          case 21: {
            Countdown = input.ReadFloat();
            break;
          }
          case 24: {
            IsFirstActioner = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///工具類
  /// </summary>
  public sealed partial class IntList : pb::IMessage<IntList> {
    private static readonly pb::MessageParser<IntList> _parser = new pb::MessageParser<IntList>(() => new IntList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntList(IntList other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntList Clone() {
      return new IntList(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_values_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntList other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
