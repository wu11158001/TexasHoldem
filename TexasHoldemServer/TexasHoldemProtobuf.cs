// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TexasHoldemProtobuf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TexasHoldemProtobuf {

  /// <summary>Holder for reflection information generated from TexasHoldemProtobuf.proto</summary>
  public static partial class TexasHoldemProtobufReflection {

    #region Descriptor
    /// <summary>File descriptor for TexasHoldemProtobuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TexasHoldemProtobufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlUZXhhc0hvbGRlbVByb3RvYnVmLnByb3RvEhNUZXhhc0hvbGRlbVByb3Rv",
            "YnVmIr4ECghNYWluUGFjaxI1CgtyZXF1ZXN0Q29kZRgBIAEoDjIgLlRleGFz",
            "SG9sZGVtUHJvdG9idWYuUmVxdWVzdENvZGUSMwoKYWN0aW9uQ29kZRgCIAEo",
            "DjIfLlRleGFzSG9sZGVtUHJvdG9idWYuQWN0aW9uQ29kZRIzCgpyZXR1cm5D",
            "b2RlGAMgASgOMh8uVGV4YXNIb2xkZW1Qcm90b2J1Zi5SZXR1cm5Db2RlEjcK",
            "DHNlbmRNb2RlQ29kZRgEIAEoDjIhLlRleGFzSG9sZGVtUHJvdG9idWYuU2Vu",
            "ZE1vZGVDb2RlEkMKElJldmlzZVVzZXJJbmZvUGFjaxgFIAEoCzInLlRleGFz",
            "SG9sZGVtUHJvdG9idWYuUmV2aXNlVXNlckluZm9QYWNrEjEKCWxvZ2luUGFj",
            "axgGIAEoCzIeLlRleGFzSG9sZGVtUHJvdG9idWYuTG9naW5QYWNrEi8KCHJv",
            "b21QYWNrGAcgAygLMh0uVGV4YXNIb2xkZW1Qcm90b2J1Zi5Sb29tUGFjaxI3",
            "Cgx1c2VySW5mb1BhY2sYCCADKAsyIS5UZXhhc0hvbGRlbVByb3RvYnVmLlVz",
            "ZXJJbmZvUGFjaxI3Cgxjb21wdXRlclBhY2sYCSABKAsyIS5UZXhhc0hvbGRl",
            "bVByb3RvYnVmLkNvbXB1dGVyUGFjaxI9Cg9nYW1lUHJvY2Vzc1BhY2sYCiAB",
            "KAsyJC5UZXhhc0hvbGRlbVByb3RvYnVmLkdhbWVQcm9jZXNzUGFjayI+CglM",
            "b2dpblBhY2sSDwoHYWNjb3VudBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIO",
            "CgZhdmF0YXIYAyABKAkiXwoMVXNlckluZm9QYWNrEhAKCEdhbWVTZWF0GAEg",
            "ASgFEhAKCG5pY2tOYW1lGAIgASgJEg4KBmF2YXRhchgDIAEoCRIMCgRjYXNo",
            "GAQgASgJEg0KBWNoaXBzGAUgASgJIj0KElJldmlzZVVzZXJJbmZvUGFjaxIS",
            "CgpyZXZpc2VOYW1lGAEgASgJEhMKC3JldmlzZVZhbHVlGAIgASgJIkEKCFJv",
            "b21QYWNrEhAKCHJvb21OYW1lGAEgASgJEhAKCG1heENvdW50GAIgASgFEhEK",
            "CUN1cnJDb3VudBgDIAEoBSI/CgxDb21wdXRlclBhY2sSEAoIbmlja05hbWUY",
            "ASABKAkSDgoGYXZhdGFyGAIgASgJEg0KBWNoaXBzGAMgASgJIrQBCg9HYW1l",
            "UHJvY2Vzc1BhY2sSNQoLZ2FtZVByb2Nlc3MYASABKA4yIC5UZXhhc0hvbGRl",
            "bVByb3RvYnVmLkdhbWVQcm9jZXNzEhIKCmFjdGlvblVzZXIYAiABKAkSFAoM",
            "c21hbGxCbGluZGVyGAMgASgJEhIKCkJpZ0JsaW5kZXIYBCABKAkSFQoNYmln",
            "QmxpbmRWYWx1ZRgFIAEoCRIVCg10b3RhbEJldENoaXBzGAYgASgJKjwKC1Jl",
            "cXVlc3RDb2RlEg8KC1JlcXVlc3ROb25lEAASCAoEVXNlchABEggKBFJvb20Q",
            "AhIICgRHYW1lEAMq7wEKCkFjdGlvbkNvZGUSDgoKQWN0aW9uTm9uZRAAEgkK",
            "BUxvZ29uEAESCQoFTG9naW4QAhIKCgZMb2dvdXQQAxIPCgtHZXRVc2VySW5m",
            "bxAEEgwKCEpvaW5Sb29tEAUSEQoNUXVpY2tKb2luUm9vbRAGEhYKElVwZGF0",
            "ZVJvb21Vc2VySW5mbxAHEg4KClVwZGF0ZVJvb20QCBIVChFPdGhlclVzZXJF",
            "eGl0Um9vbRAJEgwKCEV4aXRSb29tEAoSEgoOUmV2aXNlVXNlckluZm8QCxIN",
            "CglTdGFydEdhbWUQDBINCglHYW1lU3RhZ2UQDSpQCgpSZXR1cm5Db2RlEg4K",
            "ClJldHVybk5vbmUQABILCgdTdWNjZWVkEAESCAoERmFpbBACEg4KCkR1cGxp",
            "Y2F0ZWQQAxILCgdOb3RSb29tEAQqLwoMU2VuZE1vZGVDb2RlEgwKCE1vZGVO",
            "b25lEAASEQoNUm9vbUJyb2FkY2FzdBABKlgKC0dhbWVQcm9jZXNzEg8KC1By",
            "b2Nlc3NOb25lEAASDAoIU2V0QmxpbmQQARILCgdQcmVmbG9wEAISCAoERmxv",
            "cBADEggKBFR1cm4QBBIJCgVSaXZlchAFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TexasHoldemProtobuf.RequestCode), typeof(global::TexasHoldemProtobuf.ActionCode), typeof(global::TexasHoldemProtobuf.ReturnCode), typeof(global::TexasHoldemProtobuf.SendModeCode), typeof(global::TexasHoldemProtobuf.GameProcess), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.MainPack), global::TexasHoldemProtobuf.MainPack.Parser, new[]{ "RequestCode", "ActionCode", "ReturnCode", "SendModeCode", "ReviseUserInfoPack", "LoginPack", "RoomPack", "UserInfoPack", "ComputerPack", "GameProcessPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.LoginPack), global::TexasHoldemProtobuf.LoginPack.Parser, new[]{ "Account", "Password", "Avatar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.UserInfoPack), global::TexasHoldemProtobuf.UserInfoPack.Parser, new[]{ "GameSeat", "NickName", "Avatar", "Cash", "Chips" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.ReviseUserInfoPack), global::TexasHoldemProtobuf.ReviseUserInfoPack.Parser, new[]{ "ReviseName", "ReviseValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.RoomPack), global::TexasHoldemProtobuf.RoomPack.Parser, new[]{ "RoomName", "MaxCount", "CurrCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.ComputerPack), global::TexasHoldemProtobuf.ComputerPack.Parser, new[]{ "NickName", "Avatar", "Chips" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TexasHoldemProtobuf.GameProcessPack), global::TexasHoldemProtobuf.GameProcessPack.Parser, new[]{ "GameProcess", "ActionUser", "SmallBlinder", "BigBlinder", "BigBlindValue", "TotalBetChips" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    /// <summary>
    ///用戶
    /// </summary>
    [pbr::OriginalName("User")] User = 1,
    /// <summary>
    ///房間
    /// </summary>
    [pbr::OriginalName("Room")] Room = 2,
    /// <summary>
    ///遊戲
    /// </summary>
    [pbr::OriginalName("Game")] Game = 3,
  }

  /// <summary>
  ///執行方法名稱
  /// </summary>
  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    ///註冊
    /// </summary>
    [pbr::OriginalName("Logon")] Logon = 1,
    /// <summary>
    ///登入
    /// </summary>
    [pbr::OriginalName("Login")] Login = 2,
    /// <summary>
    ///登出
    /// </summary>
    [pbr::OriginalName("Logout")] Logout = 3,
    /// <summary>
    ///獲取用戶訊息
    /// </summary>
    [pbr::OriginalName("GetUserInfo")] GetUserInfo = 4,
    /// <summary>
    ///加入指定房間
    /// </summary>
    [pbr::OriginalName("JoinRoom")] JoinRoom = 5,
    /// <summary>
    ///快速加入房間
    /// </summary>
    [pbr::OriginalName("QuickJoinRoom")] QuickJoinRoom = 6,
    /// <summary>
    ///更新房間用戶訊息
    /// </summary>
    [pbr::OriginalName("UpdateRoomUserInfo")] UpdateRoomUserInfo = 7,
    /// <summary>
    ///刷新房間列表
    /// </summary>
    [pbr::OriginalName("UpdateRoom")] UpdateRoom = 8,
    /// <summary>
    ///其他用戶離開房間
    /// </summary>
    [pbr::OriginalName("OtherUserExitRoom")] OtherUserExitRoom = 9,
    /// <summary>
    ///離開房間
    /// </summary>
    [pbr::OriginalName("ExitRoom")] ExitRoom = 10,
    /// <summary>
    ///修改用戶資料
    /// </summary>
    [pbr::OriginalName("ReviseUserInfo")] ReviseUserInfo = 11,
    /// <summary>
    ///開始遊戲
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 12,
    /// <summary>
    ///遊戲階段
    /// </summary>
    [pbr::OriginalName("GameStage")] GameStage = 13,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    /// <summary>
    ///成功
    /// </summary>
    [pbr::OriginalName("Succeed")] Succeed = 1,
    /// <summary>
    ///失敗
    /// </summary>
    [pbr::OriginalName("Fail")] Fail = 2,
    /// <summary>
    ///重複
    /// </summary>
    [pbr::OriginalName("Duplicated")] Duplicated = 3,
    /// <summary>
    ///房間不存在
    /// </summary>
    [pbr::OriginalName("NotRoom")] NotRoom = 4,
  }

  /// <summary>
  ///發送模式
  /// </summary>
  public enum SendModeCode {
    [pbr::OriginalName("ModeNone")] ModeNone = 0,
    /// <summary>
    ///房間廣播
    /// </summary>
    [pbr::OriginalName("RoomBroadcast")] RoomBroadcast = 1,
  }

  /// <summary>
  ///遊戲進程
  /// </summary>
  public enum GameProcess {
    [pbr::OriginalName("ProcessNone")] ProcessNone = 0,
    /// <summary>
    ///選擇大小盲
    /// </summary>
    [pbr::OriginalName("SetBlind")] SetBlind = 1,
    /// <summary>
    ///翻牌前
    /// </summary>
    [pbr::OriginalName("Preflop")] Preflop = 2,
    /// <summary>
    ///翻牌
    /// </summary>
    [pbr::OriginalName("Flop")] Flop = 3,
    /// <summary>
    ///轉牌
    /// </summary>
    [pbr::OriginalName("Turn")] Turn = 4,
    /// <summary>
    ///河牌
    /// </summary>
    [pbr::OriginalName("River")] River = 5,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestCode_ = other.requestCode_;
      actionCode_ = other.actionCode_;
      returnCode_ = other.returnCode_;
      sendModeCode_ = other.sendModeCode_;
      reviseUserInfoPack_ = other.reviseUserInfoPack_ != null ? other.reviseUserInfoPack_.Clone() : null;
      loginPack_ = other.loginPack_ != null ? other.loginPack_.Clone() : null;
      roomPack_ = other.roomPack_.Clone();
      userInfoPack_ = other.userInfoPack_.Clone();
      computerPack_ = other.computerPack_ != null ? other.computerPack_.Clone() : null;
      gameProcessPack_ = other.gameProcessPack_ != null ? other.gameProcessPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::TexasHoldemProtobuf.RequestCode requestCode_ = global::TexasHoldemProtobuf.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.RequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "actionCode" field.</summary>
    public const int ActionCodeFieldNumber = 2;
    private global::TexasHoldemProtobuf.ActionCode actionCode_ = global::TexasHoldemProtobuf.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ActionCode ActionCode {
      get { return actionCode_; }
      set {
        actionCode_ = value;
      }
    }

    /// <summary>Field number for the "returnCode" field.</summary>
    public const int ReturnCodeFieldNumber = 3;
    private global::TexasHoldemProtobuf.ReturnCode returnCode_ = global::TexasHoldemProtobuf.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "sendModeCode" field.</summary>
    public const int SendModeCodeFieldNumber = 4;
    private global::TexasHoldemProtobuf.SendModeCode sendModeCode_ = global::TexasHoldemProtobuf.SendModeCode.ModeNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.SendModeCode SendModeCode {
      get { return sendModeCode_; }
      set {
        sendModeCode_ = value;
      }
    }

    /// <summary>Field number for the "ReviseUserInfoPack" field.</summary>
    public const int ReviseUserInfoPackFieldNumber = 5;
    private global::TexasHoldemProtobuf.ReviseUserInfoPack reviseUserInfoPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ReviseUserInfoPack ReviseUserInfoPack {
      get { return reviseUserInfoPack_; }
      set {
        reviseUserInfoPack_ = value;
      }
    }

    /// <summary>Field number for the "loginPack" field.</summary>
    public const int LoginPackFieldNumber = 6;
    private global::TexasHoldemProtobuf.LoginPack loginPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.LoginPack LoginPack {
      get { return loginPack_; }
      set {
        loginPack_ = value;
      }
    }

    /// <summary>Field number for the "roomPack" field.</summary>
    public const int RoomPackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::TexasHoldemProtobuf.RoomPack> _repeated_roomPack_codec
        = pb::FieldCodec.ForMessage(58, global::TexasHoldemProtobuf.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::TexasHoldemProtobuf.RoomPack> roomPack_ = new pbc::RepeatedField<global::TexasHoldemProtobuf.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TexasHoldemProtobuf.RoomPack> RoomPack {
      get { return roomPack_; }
    }

    /// <summary>Field number for the "userInfoPack" field.</summary>
    public const int UserInfoPackFieldNumber = 8;
    private static readonly pb::FieldCodec<global::TexasHoldemProtobuf.UserInfoPack> _repeated_userInfoPack_codec
        = pb::FieldCodec.ForMessage(66, global::TexasHoldemProtobuf.UserInfoPack.Parser);
    private readonly pbc::RepeatedField<global::TexasHoldemProtobuf.UserInfoPack> userInfoPack_ = new pbc::RepeatedField<global::TexasHoldemProtobuf.UserInfoPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TexasHoldemProtobuf.UserInfoPack> UserInfoPack {
      get { return userInfoPack_; }
    }

    /// <summary>Field number for the "computerPack" field.</summary>
    public const int ComputerPackFieldNumber = 9;
    private global::TexasHoldemProtobuf.ComputerPack computerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.ComputerPack ComputerPack {
      get { return computerPack_; }
      set {
        computerPack_ = value;
      }
    }

    /// <summary>Field number for the "gameProcessPack" field.</summary>
    public const int GameProcessPackFieldNumber = 10;
    private global::TexasHoldemProtobuf.GameProcessPack gameProcessPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.GameProcessPack GameProcessPack {
      get { return gameProcessPack_; }
      set {
        gameProcessPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ActionCode != other.ActionCode) return false;
      if (ReturnCode != other.ReturnCode) return false;
      if (SendModeCode != other.SendModeCode) return false;
      if (!object.Equals(ReviseUserInfoPack, other.ReviseUserInfoPack)) return false;
      if (!object.Equals(LoginPack, other.LoginPack)) return false;
      if(!roomPack_.Equals(other.roomPack_)) return false;
      if(!userInfoPack_.Equals(other.userInfoPack_)) return false;
      if (!object.Equals(ComputerPack, other.ComputerPack)) return false;
      if (!object.Equals(GameProcessPack, other.GameProcessPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) hash ^= RequestCode.GetHashCode();
      if (ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) hash ^= ActionCode.GetHashCode();
      if (ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) hash ^= ReturnCode.GetHashCode();
      if (SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) hash ^= SendModeCode.GetHashCode();
      if (reviseUserInfoPack_ != null) hash ^= ReviseUserInfoPack.GetHashCode();
      if (loginPack_ != null) hash ^= LoginPack.GetHashCode();
      hash ^= roomPack_.GetHashCode();
      hash ^= userInfoPack_.GetHashCode();
      if (computerPack_ != null) hash ^= ComputerPack.GetHashCode();
      if (gameProcessPack_ != null) hash ^= GameProcessPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionCode);
      }
      if (ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReturnCode);
      }
      if (SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SendModeCode);
      }
      if (reviseUserInfoPack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ReviseUserInfoPack);
      }
      if (loginPack_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LoginPack);
      }
      roomPack_.WriteTo(output, _repeated_roomPack_codec);
      userInfoPack_.WriteTo(output, _repeated_userInfoPack_codec);
      if (computerPack_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ComputerPack);
      }
      if (gameProcessPack_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(GameProcessPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionCode);
      }
      if (ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SendModeCode);
      }
      if (reviseUserInfoPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviseUserInfoPack);
      }
      if (loginPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginPack);
      }
      size += roomPack_.CalculateSize(_repeated_roomPack_codec);
      size += userInfoPack_.CalculateSize(_repeated_userInfoPack_codec);
      if (computerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComputerPack);
      }
      if (gameProcessPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameProcessPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::TexasHoldemProtobuf.RequestCode.RequestNone) {
        RequestCode = other.RequestCode;
      }
      if (other.ActionCode != global::TexasHoldemProtobuf.ActionCode.ActionNone) {
        ActionCode = other.ActionCode;
      }
      if (other.ReturnCode != global::TexasHoldemProtobuf.ReturnCode.ReturnNone) {
        ReturnCode = other.ReturnCode;
      }
      if (other.SendModeCode != global::TexasHoldemProtobuf.SendModeCode.ModeNone) {
        SendModeCode = other.SendModeCode;
      }
      if (other.reviseUserInfoPack_ != null) {
        if (reviseUserInfoPack_ == null) {
          ReviseUserInfoPack = new global::TexasHoldemProtobuf.ReviseUserInfoPack();
        }
        ReviseUserInfoPack.MergeFrom(other.ReviseUserInfoPack);
      }
      if (other.loginPack_ != null) {
        if (loginPack_ == null) {
          LoginPack = new global::TexasHoldemProtobuf.LoginPack();
        }
        LoginPack.MergeFrom(other.LoginPack);
      }
      roomPack_.Add(other.roomPack_);
      userInfoPack_.Add(other.userInfoPack_);
      if (other.computerPack_ != null) {
        if (computerPack_ == null) {
          ComputerPack = new global::TexasHoldemProtobuf.ComputerPack();
        }
        ComputerPack.MergeFrom(other.ComputerPack);
      }
      if (other.gameProcessPack_ != null) {
        if (gameProcessPack_ == null) {
          GameProcessPack = new global::TexasHoldemProtobuf.GameProcessPack();
        }
        GameProcessPack.MergeFrom(other.GameProcessPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::TexasHoldemProtobuf.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActionCode = (global::TexasHoldemProtobuf.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            ReturnCode = (global::TexasHoldemProtobuf.ReturnCode) input.ReadEnum();
            break;
          }
          case 32: {
            SendModeCode = (global::TexasHoldemProtobuf.SendModeCode) input.ReadEnum();
            break;
          }
          case 42: {
            if (reviseUserInfoPack_ == null) {
              ReviseUserInfoPack = new global::TexasHoldemProtobuf.ReviseUserInfoPack();
            }
            input.ReadMessage(ReviseUserInfoPack);
            break;
          }
          case 50: {
            if (loginPack_ == null) {
              LoginPack = new global::TexasHoldemProtobuf.LoginPack();
            }
            input.ReadMessage(LoginPack);
            break;
          }
          case 58: {
            roomPack_.AddEntriesFrom(input, _repeated_roomPack_codec);
            break;
          }
          case 66: {
            userInfoPack_.AddEntriesFrom(input, _repeated_userInfoPack_codec);
            break;
          }
          case 74: {
            if (computerPack_ == null) {
              ComputerPack = new global::TexasHoldemProtobuf.ComputerPack();
            }
            input.ReadMessage(ComputerPack);
            break;
          }
          case 82: {
            if (gameProcessPack_ == null) {
              GameProcessPack = new global::TexasHoldemProtobuf.GameProcessPack();
            }
            input.ReadMessage(GameProcessPack);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///註冊/登入包
  /// </summary>
  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      avatar_ = other.avatar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    ///帳號
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    ///密碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private string avatar_ = "";
    /// <summary>
    ///頭像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (Avatar != other.Avatar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用戶訊息包
  /// </summary>
  public sealed partial class UserInfoPack : pb::IMessage<UserInfoPack> {
    private static readonly pb::MessageParser<UserInfoPack> _parser = new pb::MessageParser<UserInfoPack>(() => new UserInfoPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfoPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoPack(UserInfoPack other) : this() {
      gameSeat_ = other.gameSeat_;
      nickName_ = other.nickName_;
      avatar_ = other.avatar_;
      cash_ = other.cash_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoPack Clone() {
      return new UserInfoPack(this);
    }

    /// <summary>Field number for the "GameSeat" field.</summary>
    public const int GameSeatFieldNumber = 1;
    private int gameSeat_;
    /// <summary>
    ///遊戲座位編號
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameSeat {
      get { return gameSeat_; }
      set {
        gameSeat_ = value;
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    /// <summary>
    ///暱稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private string avatar_ = "";
    /// <summary>
    ///頭像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cash" field.</summary>
    public const int CashFieldNumber = 4;
    private string cash_ = "";
    /// <summary>
    ///用戶金幣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cash {
      get { return cash_; }
      set {
        cash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 5;
    private string chips_ = "";
    /// <summary>
    ///遊戲中籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chips {
      get { return chips_; }
      set {
        chips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfoPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfoPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameSeat != other.GameSeat) return false;
      if (NickName != other.NickName) return false;
      if (Avatar != other.Avatar) return false;
      if (Cash != other.Cash) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameSeat != 0) hash ^= GameSeat.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (Cash.Length != 0) hash ^= Cash.GetHashCode();
      if (Chips.Length != 0) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameSeat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameSeat);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (Cash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Cash);
      }
      if (Chips.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameSeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameSeat);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (Cash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cash);
      }
      if (Chips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfoPack other) {
      if (other == null) {
        return;
      }
      if (other.GameSeat != 0) {
        GameSeat = other.GameSeat;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.Cash.Length != 0) {
        Cash = other.Cash;
      }
      if (other.Chips.Length != 0) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameSeat = input.ReadInt32();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
          case 34: {
            Cash = input.ReadString();
            break;
          }
          case 42: {
            Chips = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///修改用戶資料包
  /// </summary>
  public sealed partial class ReviseUserInfoPack : pb::IMessage<ReviseUserInfoPack> {
    private static readonly pb::MessageParser<ReviseUserInfoPack> _parser = new pb::MessageParser<ReviseUserInfoPack>(() => new ReviseUserInfoPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviseUserInfoPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviseUserInfoPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviseUserInfoPack(ReviseUserInfoPack other) : this() {
      reviseName_ = other.reviseName_;
      reviseValue_ = other.reviseValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviseUserInfoPack Clone() {
      return new ReviseUserInfoPack(this);
    }

    /// <summary>Field number for the "reviseName" field.</summary>
    public const int ReviseNameFieldNumber = 1;
    private string reviseName_ = "";
    /// <summary>
    ///修改項目名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviseName {
      get { return reviseName_; }
      set {
        reviseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reviseValue" field.</summary>
    public const int ReviseValueFieldNumber = 2;
    private string reviseValue_ = "";
    /// <summary>
    ///修改值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviseValue {
      get { return reviseValue_; }
      set {
        reviseValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviseUserInfoPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviseUserInfoPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReviseName != other.ReviseName) return false;
      if (ReviseValue != other.ReviseValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReviseName.Length != 0) hash ^= ReviseName.GetHashCode();
      if (ReviseValue.Length != 0) hash ^= ReviseValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReviseName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReviseName);
      }
      if (ReviseValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReviseValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReviseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReviseName);
      }
      if (ReviseValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReviseValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviseUserInfoPack other) {
      if (other == null) {
        return;
      }
      if (other.ReviseName.Length != 0) {
        ReviseName = other.ReviseName;
      }
      if (other.ReviseValue.Length != 0) {
        ReviseValue = other.ReviseValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReviseName = input.ReadString();
            break;
          }
          case 18: {
            ReviseValue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///房間包
  /// </summary>
  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomName_ = other.roomName_;
      maxCount_ = other.maxCount_;
      currCount_ = other.currCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    ///房間名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 2;
    private int maxCount_;
    /// <summary>
    ///房間最大人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "CurrCount" field.</summary>
    public const int CurrCountFieldNumber = 3;
    private int currCount_;
    /// <summary>
    ///房間當前人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrCount {
      get { return currCount_; }
      set {
        currCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (MaxCount != other.MaxCount) return false;
      if (CurrCount != other.CurrCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (CurrCount != 0) hash ^= CurrCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxCount);
      }
      if (CurrCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (CurrCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.CurrCount != 0) {
        CurrCount = other.CurrCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 24: {
            CurrCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///電腦玩家包
  /// </summary>
  public sealed partial class ComputerPack : pb::IMessage<ComputerPack> {
    private static readonly pb::MessageParser<ComputerPack> _parser = new pb::MessageParser<ComputerPack>(() => new ComputerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputerPack(ComputerPack other) : this() {
      nickName_ = other.nickName_;
      avatar_ = other.avatar_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputerPack Clone() {
      return new ComputerPack(this);
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 1;
    private string nickName_ = "";
    /// <summary>
    ///暱稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 2;
    private string avatar_ = "";
    /// <summary>
    ///頭像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private string chips_ = "";
    /// <summary>
    ///遊戲中籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chips {
      get { return chips_; }
      set {
        chips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NickName != other.NickName) return false;
      if (Avatar != other.Avatar) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (Chips.Length != 0) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NickName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NickName);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Avatar);
      }
      if (Chips.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (Chips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputerPack other) {
      if (other == null) {
        return;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.Chips.Length != 0) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NickName = input.ReadString();
            break;
          }
          case 18: {
            Avatar = input.ReadString();
            break;
          }
          case 26: {
            Chips = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///遊戲進程包
  /// </summary>
  public sealed partial class GameProcessPack : pb::IMessage<GameProcessPack> {
    private static readonly pb::MessageParser<GameProcessPack> _parser = new pb::MessageParser<GameProcessPack>(() => new GameProcessPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameProcessPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TexasHoldemProtobuf.TexasHoldemProtobufReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProcessPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProcessPack(GameProcessPack other) : this() {
      gameProcess_ = other.gameProcess_;
      actionUser_ = other.actionUser_;
      smallBlinder_ = other.smallBlinder_;
      bigBlinder_ = other.bigBlinder_;
      bigBlindValue_ = other.bigBlindValue_;
      totalBetChips_ = other.totalBetChips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProcessPack Clone() {
      return new GameProcessPack(this);
    }

    /// <summary>Field number for the "gameProcess" field.</summary>
    public const int GameProcessFieldNumber = 1;
    private global::TexasHoldemProtobuf.GameProcess gameProcess_ = global::TexasHoldemProtobuf.GameProcess.ProcessNone;
    /// <summary>
    ///遊戲進程
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TexasHoldemProtobuf.GameProcess GameProcess {
      get { return gameProcess_; }
      set {
        gameProcess_ = value;
      }
    }

    /// <summary>Field number for the "actionUser" field.</summary>
    public const int ActionUserFieldNumber = 2;
    private string actionUser_ = "";
    /// <summary>
    ///行動玩家(暱稱)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionUser {
      get { return actionUser_; }
      set {
        actionUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "smallBlinder" field.</summary>
    public const int SmallBlinderFieldNumber = 3;
    private string smallBlinder_ = "";
    /// <summary>
    ///小盲玩家(暱稱, -1=電腦)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SmallBlinder {
      get { return smallBlinder_; }
      set {
        smallBlinder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BigBlinder" field.</summary>
    public const int BigBlinderFieldNumber = 4;
    private string bigBlinder_ = "";
    /// <summary>
    ///大盲玩家(暱稱, -1=電腦)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BigBlinder {
      get { return bigBlinder_; }
      set {
        bigBlinder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bigBlindValue" field.</summary>
    public const int BigBlindValueFieldNumber = 5;
    private string bigBlindValue_ = "";
    /// <summary>
    ///大盲籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BigBlindValue {
      get { return bigBlindValue_; }
      set {
        bigBlindValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "totalBetChips" field.</summary>
    public const int TotalBetChipsFieldNumber = 6;
    private string totalBetChips_ = "";
    /// <summary>
    ///總下注籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TotalBetChips {
      get { return totalBetChips_; }
      set {
        totalBetChips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameProcessPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameProcessPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameProcess != other.GameProcess) return false;
      if (ActionUser != other.ActionUser) return false;
      if (SmallBlinder != other.SmallBlinder) return false;
      if (BigBlinder != other.BigBlinder) return false;
      if (BigBlindValue != other.BigBlindValue) return false;
      if (TotalBetChips != other.TotalBetChips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) hash ^= GameProcess.GetHashCode();
      if (ActionUser.Length != 0) hash ^= ActionUser.GetHashCode();
      if (SmallBlinder.Length != 0) hash ^= SmallBlinder.GetHashCode();
      if (BigBlinder.Length != 0) hash ^= BigBlinder.GetHashCode();
      if (BigBlindValue.Length != 0) hash ^= BigBlindValue.GetHashCode();
      if (TotalBetChips.Length != 0) hash ^= TotalBetChips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameProcess);
      }
      if (ActionUser.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActionUser);
      }
      if (SmallBlinder.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SmallBlinder);
      }
      if (BigBlinder.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BigBlinder);
      }
      if (BigBlindValue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BigBlindValue);
      }
      if (TotalBetChips.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TotalBetChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameProcess);
      }
      if (ActionUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionUser);
      }
      if (SmallBlinder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SmallBlinder);
      }
      if (BigBlinder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BigBlinder);
      }
      if (BigBlindValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BigBlindValue);
      }
      if (TotalBetChips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TotalBetChips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameProcessPack other) {
      if (other == null) {
        return;
      }
      if (other.GameProcess != global::TexasHoldemProtobuf.GameProcess.ProcessNone) {
        GameProcess = other.GameProcess;
      }
      if (other.ActionUser.Length != 0) {
        ActionUser = other.ActionUser;
      }
      if (other.SmallBlinder.Length != 0) {
        SmallBlinder = other.SmallBlinder;
      }
      if (other.BigBlinder.Length != 0) {
        BigBlinder = other.BigBlinder;
      }
      if (other.BigBlindValue.Length != 0) {
        BigBlindValue = other.BigBlindValue;
      }
      if (other.TotalBetChips.Length != 0) {
        TotalBetChips = other.TotalBetChips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameProcess = (global::TexasHoldemProtobuf.GameProcess) input.ReadEnum();
            break;
          }
          case 18: {
            ActionUser = input.ReadString();
            break;
          }
          case 26: {
            SmallBlinder = input.ReadString();
            break;
          }
          case 34: {
            BigBlinder = input.ReadString();
            break;
          }
          case 42: {
            BigBlindValue = input.ReadString();
            break;
          }
          case 50: {
            TotalBetChips = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
